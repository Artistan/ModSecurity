/*
 * ModSecurity, http://www.modsecurity.org/
 * Copyright (c) 2015 Trustwave Holdings, Inc. (http://www.trustwave.com/)
 *
 * You may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * If any of the files related to licensing are missing or if you have any
 * other questions related to licensing please contact Trustwave Holdings, Inc.
 * directly using the email address security@modsecurity.org.
 *
 */

#include <string>
#include <memory>

#include "modsecurity/actions/action.h"

#ifndef SRC_ACTIONS_SEVERITY_H_
#define SRC_ACTIONS_SEVERITY_H_

#ifdef __cplusplus

namespace modsecurity {
class Transaction;

namespace actions {


class Severity : public Action {
    /** @ingroup ModSecurity_RefManual */
    /**

    Description

    Group: Meta-data

    \verbatim
    Assigns severity to the rule in which it is used.

    Severity values in ModSecurity follows the numeric scale of syslog (where
    0 is the most severe). The data below is used by the OWASP ModSecurity
    Core Rule Set (CRS):

    - 0 - EMERGENCY: is generated from correlation of anomaly scoring data
    where there is an inbound attack and an outbound leakage.
    - 1 - ALERT: is generated from correlation where there is an inbound attack
    and an outbound application level error.
    - 2 - CRITICAL: Anomaly Score of 5. Is the highest severity level possible
    without correlation. It is normally generated by the web attack rules (40
    level files).
    - 3 - ERROR: Error - Anomaly Score of 4. Is generated mostly from outbound leakage rules (50 level files).
    - 4 - WARNING: Anomaly Score of 3. Is generated by malicious client rules (35 level files).
    - 5 - NOTICE: Anomaly Score of 2. Is generated by the Protocol policy and anomaly files.
    - 6 - INFO
    - 7 - DEBUG

    It is possible to specify severity levels using either the numerical values
    or the text values, but you should always specify severity levels using the
    text values, because it is difficult to remember what a number stands for.
    The use of the numerical values is deprecated as of version 2.5.0 and may
    be removed in one of the subsequent major updates.
    \endverbatim


    Example

    \verbatim
    = SecRule REQUEST_METHOD "^PUT$" "id:340002,rev:1,severity:CRITICAL,msg:'Restricted HTTP function'"
    \endverbatim


    Details

    \verbatim
    \endverbatim

    */
 public:
    explicit Severity(std::string action)
        : Action(action),
        m_severity(0) { }

    bool evaluate(Rule *rule, Transaction *transaction,
        std::shared_ptr<RuleMessage> rm) override;
    bool init(std::string *error) override;

    int m_severity;
};


}  // namespace actions
}  // namespace modsecurity
#endif

#endif  // SRC_ACTIONS_SEVERITY_H_
